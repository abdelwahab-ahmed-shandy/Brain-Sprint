@model UserVM
@{
    ViewData["Title"] = "Admin Details";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h3 class="card-title">
                        <i class="fas fa-user-shield me-2"></i>@ViewData["Title"]
                    </h3>
                </div>

                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-4 text-center">
                            @if (!string.IsNullOrEmpty(Model.ProfileImage))
                            {
                                <img src="@Model.ProfileImage" class="img-thumbnail rounded-circle mb-3" style="width:150px;height:150px;object-fit:cover;" alt="Profile Image">
                            }
                            else
                            {
                                <div class="rounded-circle bg-secondary d-flex align-items-center justify-content-center mx-auto mb-3" style="width:150px;height:150px;">
                                    <i class="fas fa-user text-white" style="font-size:3rem;"></i>
                                </div>
                            }
                            <h4>@Model.FirstName @Model.LastName</h4>
                            <span class="badge @(Model.Status == "Active" ? "bg-success" : Model.Status == "Blocked" ? "bg-danger" : "bg-secondary")">
                                @Model.Status
                            </span>
                        </div>

                        <div class="col-md-8">
                            <div class="row">
                                <div class="col-md-6">
                                    <dl class="row">
                                        <dt class="col-sm-4">Email:</dt>
                                        <dd class="col-sm-8">@Model.Email</dd>

                                        <dt class="col-sm-4">Phone:</dt>
                                        <dd class="col-sm-8">@(Model.PhoneNumber ?? "Not provided")</dd>

                                        <dt class="col-sm-4">Account State:</dt>
                                        <dd class="col-sm-8">@Model.AccountState</dd>
                                    </dl>
                                </div>

                                <div class="col-md-6">
                                    <dl class="row">
                                        <dt class="col-sm-4">Registered:</dt>
                                        <dd class="col-sm-8">@Model.RegistrationDate.ToString("dd MMM yyyy")</dd>

                                        <dt class="col-sm-4">Last Login:</dt>
                                        <dd class="col-sm-8">@(Model.LastLogin?.ToString("dd MMM yyyy HH:mm") ?? "Never logged in")</dd>
                                    </dl>
                                </div>
                            </div>

                            @if (!string.IsNullOrEmpty(Model.Bio))
                            {
                                <div class="mt-3">
                                    <h5>Bio</h5>
                                    <p class="text-muted">@Model.Bio</p>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="d-flex justify-content-between mt-4">
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-2"></i>Back
                        </a>

                        <div class="btn-group">
                            @if (Model.Status == "Blocked")
                            {
                                <form asp-action="UnBlock" method="post" class="me-2">
                                    <input type="hidden" name="id" value="@Model.Id" />
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-success">
                                        <i class="fas fa-lock-open me-2"></i>Unblock
                                    </button>
                                </form>
                            }
                            else
                            {
                                <form asp-action="Block" method="post" class="me-2">
                                    <input type="hidden" name="id" value="@Model.Id" />
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-warning">
                                        <i class="fas fa-lock me-2"></i>Block
                                    </button>
                                </form>
                            }

                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary me-2">
                                <i class="fas fa-edit me-2"></i>Edit
                            </a>

                            <button class="btn btn-info" data-bs-toggle="modal" data-bs-target="#resetPasswordModal">
                                <i class="fas fa-key me-2"></i>Reset Password
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Reset Password Modal -->
<div class="modal fade" id="resetPasswordModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title">
                    <i class="fas fa-key me-2"></i>Reset Password for @Model.FirstName
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <form asp-action="ResetPassword" method="post">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.Id" />

                    <div class="mb-3">
                        <label class="form-label">New Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" name="newPassword" required
                                   pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^\da-zA-Z]).{8,}$">
                            <button class="btn btn-outline-secondary toggle-password" type="button">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                        <small class="form-text text-muted">
                            Must contain 8+ chars with uppercase, lowercase, number, and special character
                        </small>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Confirm Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" name="confirmPassword" required>
                            <button class="btn btn-outline-secondary toggle-password" type="button">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>

                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="forceChange" name="forceChange" checked>
                        <label class="form-check-label" for="forceChange">
                            Require password change on next login
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-2"></i>Reset Password
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Toggle password visibility
        document.querySelectorAll('.toggle-password').forEach(button => {
            button.addEventListener('click', function() {
                const input = this.previousElementSibling;
                const icon = this.querySelector('i');
                if (input.type === "password") {
                    input.type = "text";
                    icon.classList.replace('fa-eye', 'fa-eye-slash');
                } else {
                    input.type = "password";
                    icon.classList.replace('fa-eye-slash', 'fa-eye');
                }
            });
        });

        // Password validation
        document.querySelector('form[action*="ResetPassword"]').addEventListener('submit', function(e) {
            const newPassword = this.querySelector('input[name="newPassword"]').value;
            const confirmPassword = this.querySelector('input[name="confirmPassword"]').value;

            if (newPassword !== confirmPassword) {
                e.preventDefault();
                alert('Passwords do not match!');
                return false;
            }
        });
    </script>
}