@model CoursesVM
@{
    ViewData["Title"] = "Course Management";
}

<div class="container-fluid">


    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1><i class="fas fa-book-open me-2"></i>@ViewData["Title"]</h1>
        @* <a asp-action="Create" class="btn btn-primary"> *@
        @*     <i class="fas fa-plus me-1"></i> New Course *@
        @* </a> *@
    </div>

    <!-- Search and Filter Card -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" class="form-control" name="query" value="@Model.Pagination.Query"
                               placeholder="Search courses...">
                    </div>
                </div>
                <div class="col-md-4">
                    <select class="form-select" name="status" asp-items="Html.GetEnumSelectList<CourseStatus>()">
                        <option value="">All Statuses</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-filter me-1"></i> Filter
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Courses Table -->
    <div class="card shadow-sm">
        <div class="card-body p-0">
            @if (Model.Courses.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Title</th>
                                <th>Instructor</th>
                                <th>Learning Path</th>
                                <th class="text-end">Price</th>
                                <th>Status</th>
                                <th>Created</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var course in Model.Courses)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(course.ImgUrl))
                                            {
                                                <img src="@course.ImgUrl" class="rounded me-3" width="40" height="40" alt="@course.Title">
                                            }
                                            <div>
                                                <strong>@course.Title</strong>
                                                <div class="text-muted small">@(course.Description?.Length > 50 ? course.Description.Substring(0, 50) + "..." : course.Description)</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>@course.InstructorName</td>
                                    <td>@course.LearningPathName</td>
                                    <td class="text-end">@course.Price.ToString("C")</td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(course.Status)">
                                            @course.Status
                                        </span>
                                    </td>
                                    <td>@course.CreatedDateUtc.ToString("d MMM yyyy")</td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <a asp-action="Edit" asp-route-id="@course.Id" class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a asp-action="Details" asp-route-id="@course.Id" class="btn btn-sm btn-outline-info">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@course.Id" class="btn btn-sm btn-outline-danger">
                                                <i class="fas fa-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                <div class="card-footer">
                    <nav>
                        <ul class="pagination justify-content-center mb-0">
                            @if (Model.Pagination.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-query="@Model.Pagination.Query"
                                       asp-route-status="@Model.Pagination.StatusFilter"
                                       asp-route-page="@(Model.Pagination.CurrentPage - 1)">
                                        Previous
                                    </a>
                                </li>
                            }

                            @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-query="@Model.Pagination.Query"
                                       asp-route-status="@Model.Pagination.StatusFilter"
                                       asp-route-page="@i">@i</a>
                                </li>
                            }

                            @if (Model.Pagination.CurrentPage < Model.Pagination.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-action="Index"
                                       asp-route-query="@Model.Pagination.Query"
                                       asp-route-status="@Model.Pagination.StatusFilter"
                                       asp-route-page="@(Model.Pagination.CurrentPage + 1)">
                                        Next
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-book-open fa-3x text-muted mb-3"></i>
                    <h4>No courses found</h4>
                    <p class="text-muted">Try adjusting your search criteria</p>
                    <a asp-action="Index" class="btn btn-primary">
                        <i class="fas fa-sync-alt me-1"></i> Reset
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(CourseStatus status)
    {
        return status switch
        {
            CourseStatus.Approved => "bg-success",
            CourseStatus.Rejected => "bg-danger",
            _ => "bg-warning"
        };
    }
}

@section Styles {
    <style>
        .table th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.75rem;
            letter-spacing: 0.5px;
            border-top: none;
        }

        .badge {
            font-weight: 500;
            padding: 0.35em 0.65em;
            font-size: 0.75em;
        }
    </style>
}