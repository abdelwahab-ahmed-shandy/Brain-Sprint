@model LearningPathsVM
@using Models.Enums

@{
    ViewData["Title"] = "Learning Paths";
}

<div class="container">
    <div class="row mb-4">
        <div class="col-md-6">
            <h2>Learning Paths</h2>
        </div>
        <div class="col-md-6 text-end">
            <a asp-action="Create" class="btn btn-primary">Create New</a>
        </div>
    </div>

    <!-- Search and Filter Form -->
    <form method="get" class="mb-4">
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <input type="text" name="query" class="form-control" placeholder="Search..." value="@Model.Pagination.Query">
                    <button type="submit" class="btn btn-outline-secondary">Search</button>
                </div>
            </div>
            <div class="col-md-4">
                <select name="status" class="form-select" asp-items="Html.GetEnumSelectList<CourseStatus>()">
                    <option value="">All Statuses</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-secondary w-100">Filter</button>
            </div>
        </div>
    </form>

    <!-- Learning Paths Table -->
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Courses</th>
                    <th>Status</th>
                    <th>Created Date</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.LearningPaths)
                {
                    <tr>
                        <td>
                            @if (!string.IsNullOrEmpty(item.IconUrl))
                            {
                                <img src="@item.IconUrl" alt="Icon" class="me-2" style="width:24px; height:24px;">
                            }
                            @item.Name
                        </td>
                        <td>@item.Description</td>
                        <td>@item.CourseCount</td>
                        <td>
                            <span class="badge @GetStatusBadgeClass(item.Status)">
                                @item.Status
                            </span>
                        </td>
                        <td>@item.CreatedDateUtc.ToString("yyyy-MM-dd")</td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Edit</a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Details</a>

                                <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal-@item.Id">
                                    Delete
                                </button>
                            </div>

                            <!-- Delete Confirmation Modal for each item -->
                            <div class="modal fade" id="deleteModal-@item.Id" tabindex="-1" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered">
                                    <div class="modal-content">
                                        <div class="modal-header bg-danger text-white">
                                            <h5 class="modal-title">Confirm Deletion</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <p>Are you sure you want to delete <strong>@item.Name</strong>?</p>
                                            @if (item.CourseCount > 0)
                                            {
                                                <div class="alert alert-warning">
                                                    <i class="fas fa-exclamation-triangle me-2"></i>
                                                    Contains @item.CourseCount associated course(s)
                                                </div>
                                            }
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                            <form asp-action="Delete" asp-route-id="@item.Id" method="post">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-danger">
                                                    <i class="fas fa-trash-alt me-1"></i> Delete
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.Pagination.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-page="@(Model.Pagination.CurrentPage - 1)"
                       asp-route-query="@Model.Pagination.Query"
                       asp-route-status="@Model.Pagination.StatusFilter">
                        Previous
                    </a>
                </li>
            }

            @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
            {
                <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-page="@i"
                       asp-route-query="@Model.Pagination.Query"
                       asp-route-status="@Model.Pagination.StatusFilter">
                        @i
                    </a>
                </li>
            }

            @if (Model.Pagination.CurrentPage < Model.Pagination.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-page="@(Model.Pagination.CurrentPage + 1)"
                       asp-route-query="@Model.Pagination.Query"
                       asp-route-status="@Model.Pagination.StatusFilter">
                        Next
                    </a>
                </li>
            }
        </ul>
    </nav>
</div>

@functions {
    string GetStatusBadgeClass(CourseStatus status)
    {
        return status switch
        {
            CourseStatus.Approved => "bg-success",
            CourseStatus.Pending => "bg-warning text-dark",
            CourseStatus.Rejected => "bg-danger",
            _ => "bg-secondary"
        };
    }
}

@section Scripts {
    <!-- Bootstrap and Font Awesome for the trash icon -->
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
}