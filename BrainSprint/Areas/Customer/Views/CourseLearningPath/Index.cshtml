@model CourseLearningPathCustomerVM
@{
    ViewData["Title"] = "Learning Paths";
}


<div class="container py-5">
    <div class="row mb-4">
        <div class="col-12 text-center">
            <h1 class="display-5">Learning Paths and Courses</h1>
            <p class="lead">Choose from the best educational courses</p>
        </div>
    </div>

    <!-- Search and Filter -->
    <div class="row mb-4">
        <div class="col-md-8 mx-auto">
            <form asp-action="Index" method="get" class="search-form">
                <div class="input-group">
                    <input type="text" class="form-control"
                           name="query" value="@Model.SearchQuery"
                           placeholder="Search for a course or learning path...">
                    @* <select name="status" class="form-select" style="max-width: 150px;"> *@
                    @*     <option value="">All cases</option> *@
                    @*     <option value="Approved" selected="@(Model.StatusFilter == "Approved")">Approved</option> *@
                    @*     <option value="Pending" selected="@(Model.StatusFilter == "Pending")">Pending</option> *@
                    @* </select> *@
                    <button class="btn btn-primary" type="submit">
                        <i class="fas fa-search"></i>Search
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Courses Grid -->
    <div class="row">
        @if (Model.CourseLearningPaths.Any())
        {
            foreach (var item in Model.CourseLearningPaths)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card h-100">
                        <img src="@item.ImgUrl" class="card-img-top" alt="@item.Title" style="height: 180px; object-fit: cover;">
                        <div class="card-body">
                            <h5 class="card-title">@item.Title</h5>
                            <h6 class="card-subtitle mb-2 text-muted">
                                <i class="fas fa-road"></i>@item.LearningPathName
                            </h6>
                            <p class="card-text text-muted small">
                                <i class="fas fa-user-tie"></i>@item.InstructorName
                            </p>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="badge bg-primary">@item.Price.ToString("C")</span>
                                <span class="text-muted small">
                                    <i class="far fa-clock"></i> @item.Duration Hour
                                </span>
                            </div>
                        </div>
                        <div class="card-footer bg-white">
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-primary w-100">
                                <i class="fas fa-info-circle"></i> Details
                            </a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-info text-center py-5">
                    <i class="fas fa-book-open fa-3x mb-4"></i>
                    <h4>No courses currently available</h4>
                    @if (!string.IsNullOrEmpty(Model.SearchQuery))
                    {
                        <p>No results were found that match your search</p>
                    }
                </div>
            </div>
        }
    </div>


    <!-- Pagination -->
    @if (Model.Pagination.TotalPages > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(Model.Pagination.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link"
                       href="@Url.Action("Index", new { page = Model.Pagination.CurrentPage - 1, query = Model.SearchQuery, status = Model.StatusFilter })">
                        the previous
                    </a>
                </li>

                @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                        <a class="page-link"
                           href="@Url.Action("Index", new { page = i, query = Model.SearchQuery, status = Model.StatusFilter })">@i</a>
                    </li>
                }

                <li class="page-item @(Model.Pagination.CurrentPage == Model.Pagination.TotalPages ? "disabled" : "")">
                    <a class="page-link"
                       href="@Url.Action("Index", new { page = Model.Pagination.CurrentPage + 1, query = Model.SearchQuery, status = Model.StatusFilter })">
                        the next
                    </a>
                </li>
            </ul>
        </nav>
    }
</div>